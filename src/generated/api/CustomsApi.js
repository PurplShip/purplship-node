/**
 * Purplship Open Source Multi-carrier Shipping API
 *  Purplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services  The **proxy** endpoints are stateless and forwards calls to carriers web services. 
 *
 * OpenAPI spec version: v1-2021.2
 * Contact: hello@purplship.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Customs from '../model/Customs';
import CustomsData from '../model/CustomsData';
import CustomsList from '../model/CustomsList';
import ErrorResponse from '../model/ErrorResponse';
import Operation from '../model/Operation';

/**
* Customs service.
* @module api/CustomsApi
* @version v1-2021.2
*/
export default class CustomsApi {

    /**
    * Constructs a new CustomsApi. 
    * @alias module:api/CustomsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the create operation.
     * @callback module:api/CustomsApi~createCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Customs} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a customs info
     * Create a new customs declaration.
     * @param {module:api/CustomsApi~createCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Customs}
     */
    create(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Customs;

      return this.apiClient.callApi(
        '/customs_info', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the discard operation.
     * @callback module:api/CustomsApi~discardCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Discard a customs info
     * Discard a customs declaration.
     * @param {module:api/CustomsApi~discardCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Operation}
     */
    discard(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Operation;

      return this.apiClient.callApi(
        '/customs_info/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the list operation.
     * @callback module:api/CustomsApi~listCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomsList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all customs info
     * Retrieve all stored customs declarations.
     * @param {Object} opts Optional parameters
     * @param {module:api/CustomsApi~listCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomsList}
     */
    list(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomsList;

      return this.apiClient.callApi(
        '/customs_info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the retrieve operation.
     * @callback module:api/CustomsApi~retrieveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Customs} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a customs info
     * Retrieve customs declaration.
     * @param {module:api/CustomsApi~retrieveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Customs}
     */
    retrieve(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Customs;

      return this.apiClient.callApi(
        '/customs_info/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the update operation.
     * @callback module:api/CustomsApi~updateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Customs} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a customs info
     * modify an existing customs declaration.
     * @param {module:api/CustomsApi~updateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Customs}
     */
    update(body, id, callback) {
      let postBody = body;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Customs;

      return this.apiClient.callApi(
        '/customs_info/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
