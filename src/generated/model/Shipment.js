/**
 * Purplship Open Source Multi-carrier Shipping API
 *  Purplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services  The **proxy** endpoints are stateless and forwards calls to carriers web services. 
 *
 * OpenAPI spec version: v1-2021.0
 * Contact: hello@purplship.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import Customs from './Customs';
import Message from './Message';
import Parcel from './Parcel';
import Payment from './Payment';
import Rate from './Rate';

/**
* The Shipment model module.
* @module model/Shipment
* @version v1-2021.0
*/
export default class Shipment {
    /**
    * Constructs a new <code>Shipment</code>.
    * @alias module:model/Shipment
    * @class
    * @param shipper {module:model/Address} 
    * @param recipient {module:model/Address} 
    * @param parcels {Array.<module:model/Parcel>} The shipment's parcels
    * @param created_at {String}  The shipment creation date  Date Format: `YYYY-MM-DD` 
    * @param test_mode {Boolean} Specified whether it was created with a carrier in test mode
    */

    constructor(shipper, recipient, parcels, created_at, test_mode) {
        
        
        this['shipper'] = shipper;
        this['recipient'] = recipient;
        this['parcels'] = parcels;
        this['created_at'] = created_at;
        this['test_mode'] = test_mode;
        
    }

    /**
    * Constructs a <code>Shipment</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Shipment} obj Optional instance to populate.
    * @return {module:model/Shipment} The populated <code>Shipment</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Shipment();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('carrier_name')) {
                obj['carrier_name'] = ApiClient.convertToType(data['carrier_name'], 'String');
            }
            if (data.hasOwnProperty('carrier_id')) {
                obj['carrier_id'] = ApiClient.convertToType(data['carrier_id'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('tracking_number')) {
                obj['tracking_number'] = ApiClient.convertToType(data['tracking_number'], 'String');
            }
            if (data.hasOwnProperty('shipment_identifier')) {
                obj['shipment_identifier'] = ApiClient.convertToType(data['shipment_identifier'], 'String');
            }
            if (data.hasOwnProperty('selected_rate')) {
                obj['selected_rate'] = Rate.constructFromObject(data['selected_rate']);
            }
            if (data.hasOwnProperty('selected_rate_id')) {
                obj['selected_rate_id'] = ApiClient.convertToType(data['selected_rate_id'], 'String');
            }
            if (data.hasOwnProperty('rates')) {
                obj['rates'] = ApiClient.convertToType(data['rates'], [Rate]);
            }
            if (data.hasOwnProperty('tracking_url')) {
                obj['tracking_url'] = ApiClient.convertToType(data['tracking_url'], 'String');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('shipper')) {
                obj['shipper'] = Address.constructFromObject(data['shipper']);
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = Address.constructFromObject(data['recipient']);
            }
            if (data.hasOwnProperty('parcels')) {
                obj['parcels'] = ApiClient.convertToType(data['parcels'], [Parcel]);
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], ['String']);
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], Object);
            }
            if (data.hasOwnProperty('payment')) {
                obj['payment'] = Payment.constructFromObject(data['payment']);
            }
            if (data.hasOwnProperty('customs')) {
                obj['customs'] = Customs.constructFromObject(data['customs']);
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('label_type')) {
                obj['label_type'] = ApiClient.convertToType(data['label_type'], 'String');
            }
            if (data.hasOwnProperty('carrier_ids')) {
                obj['carrier_ids'] = ApiClient.convertToType(data['carrier_ids'], ['String']);
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = ApiClient.convertToType(data['meta'], Object);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('test_mode')) {
                obj['test_mode'] = ApiClient.convertToType(data['test_mode'], 'Boolean');
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [Message]);
            }
        }
        return obj;
    }

    /**
    * A unique identifier
    * @member {String} id
    */
    'id' = undefined;
    /**
    * The current Shipment status
    * @member {module:model/Shipment.StatusEnum} status
    * @default 'created'
    */
    'status' = 'created';
    /**
    * The shipment carrier
    * @member {String} carrier_name
    */
    'carrier_name' = undefined;
    /**
    * The shipment carrier configured identifier
    * @member {String} carrier_id
    */
    'carrier_id' = undefined;
    /**
    * The shipment label in base64 string
    * @member {String} label
    */
    'label' = undefined;
    /**
    * The shipment tracking number
    * @member {String} tracking_number
    */
    'tracking_number' = undefined;
    /**
    * The shipment carrier system identifier
    * @member {String} shipment_identifier
    */
    'shipment_identifier' = undefined;
    /**
    * @member {module:model/Rate} selected_rate
    */
    'selected_rate' = undefined;
    /**
    * The shipment selected rate.
    * @member {String} selected_rate_id
    */
    'selected_rate_id' = undefined;
    /**
    * The list for shipment rates fetched previously
    * @member {Array.<module:model/Rate>} rates
    */
    'rates' = undefined;
    /**
    * The shipment tracking url
    * @member {String} tracking_url
    */
    'tracking_url' = undefined;
    /**
    * The selected service
    * @member {String} service
    */
    'service' = undefined;
    /**
    * @member {module:model/Address} shipper
    */
    'shipper' = undefined;
    /**
    * @member {module:model/Address} recipient
    */
    'recipient' = undefined;
    /**
    * The shipment's parcels
    * @member {Array.<module:model/Parcel>} parcels
    */
    'parcels' = undefined;
    /**
    *  The carriers services requested for the shipment.  Please consult [the reference](#operation/references) for specific carriers services.<br/> Note that this is a list because on a Multi-carrier rate request you could specify a service per carrier. 
    * @member {Array.<String>} services
    */
    'services' = undefined;
    /**
    *  The options available for the shipment.<br/> Please consult [the reference](#operation/references) for additional specific carriers options. 
    * @member {Object} options
    */
    'options' = undefined;
    /**
    * @member {module:model/Payment} payment
    */
    'payment' = undefined;
    /**
    * @member {module:model/Customs} customs
    */
    'customs' = undefined;
    /**
    * The shipment reference
    * @member {String} reference
    */
    'reference' = undefined;
    /**
    * The shipment label file type.
    * @member {module:model/Shipment.LabelTypeEnum} label_type
    */
    'label_type' = undefined;
    /**
    *  The list of configured carriers you wish to get rates from.  *Note that the request will be sent to all carriers in nothing is specified* 
    * @member {Array.<String>} carrier_ids
    */
    'carrier_ids' = undefined;
    /**
    * provider specific metadata
    * @member {Object} meta
    */
    'meta' = undefined;
    /**
    *  The shipment creation date  Date Format: `YYYY-MM-DD` 
    * @member {String} created_at
    */
    'created_at' = undefined;
    /**
    * Specified whether it was created with a carrier in test mode
    * @member {Boolean} test_mode
    */
    'test_mode' = undefined;
    /**
    * The list of note or warning messages
    * @member {Array.<module:model/Message>} messages
    */
    'messages' = undefined;



    /**
    * Allowed values for the <code>status</code> property.
    * @enum {String}
    * @readonly
    */
    static StatusEnum = {
        /**
         * value: "created"
         * @const
         */
        "created": "created",
        /**
         * value: "purchased"
         * @const
         */
        "purchased": "purchased",
        /**
         * value: "transit"
         * @const
         */
        "transit": "transit",
        /**
         * value: "delivered"
         * @const
         */
        "delivered": "delivered"    };
    /**
    * Allowed values for the <code>label_type</code> property.
    * @enum {String}
    * @readonly
    */
    static LabelTypeEnum = {
        /**
         * value: "PDF"
         * @const
         */
        "PDF": "PDF",
        /**
         * value: "ZPL"
         * @const
         */
        "ZPL": "ZPL"    };

}
