/**
 * Purplship Open Source Multi-carrier Shipping API
 *  Purplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services  The **proxy** endpoints are stateless and forwards calls to carriers web services. 
 *
 * OpenAPI spec version: v1-2021.0
 * Contact: hello@purplship.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The ParcelData model module.
* @module model/ParcelData
* @version v1-2021.0
*/
export default class ParcelData {
    /**
    * Constructs a new <code>ParcelData</code>.
    * @alias module:model/ParcelData
    * @class
    * @param weight {Number} The parcel's weight
    * @param weight_unit {module:model/ParcelData.WeightUnitEnum} The parcel's weight unit
    */

    constructor(weight, weight_unit) {
        
        
        this['weight'] = weight;
        this['weight_unit'] = weight_unit;
        
    }

    /**
    * Constructs a <code>ParcelData</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ParcelData} obj Optional instance to populate.
    * @return {module:model/ParcelData} The populated <code>ParcelData</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ParcelData();
                        
            
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('packaging_type')) {
                obj['packaging_type'] = ApiClient.convertToType(data['packaging_type'], 'String');
            }
            if (data.hasOwnProperty('package_preset')) {
                obj['package_preset'] = ApiClient.convertToType(data['package_preset'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('is_document')) {
                obj['is_document'] = ApiClient.convertToType(data['is_document'], 'Boolean');
            }
            if (data.hasOwnProperty('weight_unit')) {
                obj['weight_unit'] = ApiClient.convertToType(data['weight_unit'], 'String');
            }
            if (data.hasOwnProperty('dimension_unit')) {
                obj['dimension_unit'] = ApiClient.convertToType(data['dimension_unit'], 'String');
            }
        }
        return obj;
    }

    /**
    * The parcel's weight
    * @member {Number} weight
    */
    'weight' = undefined;
    /**
    * The parcel's width
    * @member {Number} width
    */
    'width' = undefined;
    /**
    * The parcel's height
    * @member {Number} height
    */
    'height' = undefined;
    /**
    * The parcel's length
    * @member {Number} length
    */
    'length' = undefined;
    /**
    *  The parcel's packaging type.  **Note that the packaging is optional when using a package preset**  values: <br/>- **envelope**<br/>- **pak**<br/>- **tube**<br/>- **pallet**<br/>- **small_box**<br/>- **medium_box**<br/>- **your_packaging**  For specific carriers packaging type, please consult [the reference](#operation/references). 
    * @member {String} packaging_type
    */
    'packaging_type' = undefined;
    /**
    *  The parcel's package preset.  For specific carriers package preset, please consult [the reference](#operation/references). 
    * @member {String} package_preset
    */
    'package_preset' = undefined;
    /**
    * The parcel's description
    * @member {String} description
    */
    'description' = undefined;
    /**
    * The parcel's content description
    * @member {String} content
    */
    'content' = undefined;
    /**
    * Indicates if the parcel is composed of documents only
    * @member {Boolean} is_document
    * @default false
    */
    'is_document' = false;
    /**
    * The parcel's weight unit
    * @member {module:model/ParcelData.WeightUnitEnum} weight_unit
    */
    'weight_unit' = undefined;
    /**
    * The parcel's dimension unit
    * @member {module:model/ParcelData.DimensionUnitEnum} dimension_unit
    */
    'dimension_unit' = undefined;



    /**
    * Allowed values for the <code>weight_unit</code> property.
    * @enum {String}
    * @readonly
    */
    static WeightUnitEnum = {
        /**
         * value: "KG"
         * @const
         */
        "KG": "KG",
        /**
         * value: "LB"
         * @const
         */
        "LB": "LB"    };
    /**
    * Allowed values for the <code>dimension_unit</code> property.
    * @enum {String}
    * @readonly
    */
    static DimensionUnitEnum = {
        /**
         * value: "CM"
         * @const
         */
        "CM": "CM",
        /**
         * value: "IN"
         * @const
         */
        "IN": "IN"    };

}
