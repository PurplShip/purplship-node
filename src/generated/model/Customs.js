/**
 * Purplship Open Source Multi-carrier Shipping API
 *  Purplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services  The **proxy** endpoints are stateless and forwards calls to carriers web services. 
 *
 * OpenAPI spec version: v1-2021.2
 * Contact: hello@purplship.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Commodity from './Commodity';
import Payment from './Payment';

/**
* The Customs model module.
* @module model/Customs
* @version v1-2021.2
*/
export default class Customs {
    /**
    * Constructs a new <code>Customs</code>.
    * @alias module:model/Customs
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Customs</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Customs} obj Optional instance to populate.
    * @return {module:model/Customs} The populated <code>Customs</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Customs();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('aes')) {
                obj['aes'] = ApiClient.convertToType(data['aes'], 'String');
            }
            if (data.hasOwnProperty('eel_pfc')) {
                obj['eel_pfc'] = ApiClient.convertToType(data['eel_pfc'], 'String');
            }
            if (data.hasOwnProperty('content_type')) {
                obj['content_type'] = ApiClient.convertToType(data['content_type'], 'String');
            }
            if (data.hasOwnProperty('content_description')) {
                obj['content_description'] = ApiClient.convertToType(data['content_description'], 'String');
            }
            if (data.hasOwnProperty('incoterm')) {
                obj['incoterm'] = ApiClient.convertToType(data['incoterm'], 'String');
            }
            if (data.hasOwnProperty('commodities')) {
                obj['commodities'] = ApiClient.convertToType(data['commodities'], [Commodity]);
            }
            if (data.hasOwnProperty('duty')) {
                obj['duty'] = Payment.constructFromObject(data['duty']);
            }
            if (data.hasOwnProperty('invoice')) {
                obj['invoice'] = ApiClient.convertToType(data['invoice'], 'String');
            }
            if (data.hasOwnProperty('commercial_invoice')) {
                obj['commercial_invoice'] = ApiClient.convertToType(data['commercial_invoice'], 'Boolean');
            }
            if (data.hasOwnProperty('certify')) {
                obj['certify'] = ApiClient.convertToType(data['certify'], 'Boolean');
            }
            if (data.hasOwnProperty('signer')) {
                obj['signer'] = ApiClient.convertToType(data['signer'], 'String');
            }
            if (data.hasOwnProperty('certificate_number')) {
                obj['certificate_number'] = ApiClient.convertToType(data['certificate_number'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], Object);
            }
        }
        return obj;
    }

    /**
    * A unique identifier
    * @member {String} id
    */
    'id' = undefined;
    /**
    * @member {String} aes
    */
    'aes' = undefined;
    /**
    * @member {String} eel_pfc
    */
    'eel_pfc' = undefined;
    /**
    * @member {module:model/Customs.ContentTypeEnum} content_type
    */
    'content_type' = undefined;
    /**
    * @member {String} content_description
    */
    'content_description' = undefined;
    /**
    * The customs 'term of trade' also known as 'incoterm'
    * @member {module:model/Customs.IncotermEnum} incoterm
    */
    'incoterm' = undefined;
    /**
    * The parcel content items
    * @member {Array.<module:model/Commodity>} commodities
    */
    'commodities' = undefined;
    /**
    * @member {module:model/Payment} duty
    */
    'duty' = undefined;
    /**
    * The invoice reference number
    * @member {String} invoice
    */
    'invoice' = undefined;
    /**
    * Indicates if the shipment is commercial
    * @member {Boolean} commercial_invoice
    */
    'commercial_invoice' = undefined;
    /**
    * Indicate that signer certified confirmed all
    * @member {Boolean} certify
    */
    'certify' = undefined;
    /**
    * @member {String} signer
    */
    'signer' = undefined;
    /**
    * @member {String} certificate_number
    */
    'certificate_number' = undefined;
    /**
    * @member {Object} options
    */
    'options' = undefined;



    /**
    * Allowed values for the <code>content_type</code> property.
    * @enum {String}
    * @readonly
    */
    static ContentTypeEnum = {
        /**
         * value: "documents"
         * @const
         */
        "documents": "documents",
        /**
         * value: "gift"
         * @const
         */
        "gift": "gift",
        /**
         * value: "sample"
         * @const
         */
        "sample": "sample",
        /**
         * value: "merchandise"
         * @const
         */
        "merchandise": "merchandise",
        /**
         * value: "return_merchandise"
         * @const
         */
        "return_merchandise": "return_merchandise",
        /**
         * value: "other"
         * @const
         */
        "other": "other"    };
    /**
    * Allowed values for the <code>incoterm</code> property.
    * @enum {String}
    * @readonly
    */
    static IncotermEnum = {
        /**
         * value: "CFR"
         * @const
         */
        "CFR": "CFR",
        /**
         * value: "CIF"
         * @const
         */
        "CIF": "CIF",
        /**
         * value: "CIP"
         * @const
         */
        "CIP": "CIP",
        /**
         * value: "CPT"
         * @const
         */
        "CPT": "CPT",
        /**
         * value: "DAF"
         * @const
         */
        "DAF": "DAF",
        /**
         * value: "DDP"
         * @const
         */
        "DDP": "DDP",
        /**
         * value: "DDU"
         * @const
         */
        "DDU": "DDU",
        /**
         * value: "DEQ"
         * @const
         */
        "DEQ": "DEQ",
        /**
         * value: "DES"
         * @const
         */
        "DES": "DES",
        /**
         * value: "EXW"
         * @const
         */
        "EXW": "EXW",
        /**
         * value: "FAS"
         * @const
         */
        "FAS": "FAS",
        /**
         * value: "FCA"
         * @const
         */
        "FCA": "FCA",
        /**
         * value: "FOB"
         * @const
         */
        "FOB": "FOB"    };

}
