/**
 * Purplship API
 *  ## API Reference  Purplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services.  The Purplship API is organized around REST. Our API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.  The Purplship API differs for every account as we release new versions. These docs are customized to your version of the API.   ## Versioning  When backwards-incompatible changes are made to the API, a new, dated version is released.  The current version is `2021.4`.   Read our API changelog and to learn more about backwards compatibility.  As a precaution, use API versioning to check a new API version before committing to an upgrade. 
 *
 * The version of the OpenAPI document: 2021.4
 * Contact: hello@purplship.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Customs from './Customs';

/**
 * The CustomsList model module.
 * @module model/CustomsList
 * @version 2021.4
 */
class CustomsList {
    /**
     * Constructs a new <code>CustomsList</code>.
     * @alias module:model/CustomsList
     * @param results {Array.<module:model/Customs>} 
     */
    constructor(results) { 
        
        CustomsList.initialize(this, results);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, results) { 
        obj['results'] = results;
    }

    /**
     * Constructs a <code>CustomsList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomsList} obj Optional instance to populate.
     * @return {module:model/CustomsList} The populated <code>CustomsList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomsList();

            if (data.hasOwnProperty('next')) {
                obj['next'] = ApiClient.convertToType(data['next'], 'String');
            }
            if (data.hasOwnProperty('previous')) {
                obj['previous'] = ApiClient.convertToType(data['previous'], 'String');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [Customs]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} next
 */
CustomsList.prototype['next'] = undefined;

/**
 * @member {String} previous
 */
CustomsList.prototype['previous'] = undefined;

/**
 * @member {Array.<module:model/Customs>} results
 */
CustomsList.prototype['results'] = undefined;






export default CustomsList;

